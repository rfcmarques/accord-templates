/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace org.digitalsign.simpleslarenewalexample

import org.accordproject.cicero.contract.*
import org.accordproject.cicero.runtime.*
import org.accordproject.time.*
import org.accordproject.money.*
import org.accordproject.money.MonetaryAmount


contract MyLogic over MyContract {
  // Simple Clause
  clause helloworld(request : MyRequest) : MyResponse emits PaymentObligation {

    enforce request.slapoints >= 0.0
        and request.slapoints < 100.0
    else throw ErgoErrorResponse{ message: "A pontuação dada tem que se encontrar no intervalo de 0 a 100" };

    info(format(addPeriod(contract.contractDate, contract.duration), "DD/MM/YYYY"));

    if request.slapoints >= 99.0 then
     emit PaymentObligation{
      contract : contract,
      promisor : some(contract.Employer),
      promisee : some(contract.Employee),
      amount : MonetaryAmount{ doubleValue: contract.amount, currencyCode: EUR },
      deadline : none,
      description : "Pagamento efetuado por " ++ contract.Employer.partyId ++ " a " ++ contract.Employee.partyId
      };
     return MyResponse{ 
       paymentConfirmation: "O trimestre foi pago na totalidade",
       contractInfo: "O contrato foi renovado e termina a " ++ format(addPeriod(contract.contractDate, contract.duration), "DD/MM/YYYY"),
       contractEnd: format(addPeriod(contract.contractDate, contract.duration), "DD/MM/YYYY")
       }

    else if request.slapoints < 99.0 and request.slapoints >= 95.0 then
     emit PaymentObligation{
      contract : contract,
      promisor : some(contract.Employer),
      promisee : some(contract.Employee),
      amount : MonetaryAmount{ doubleValue: (contract.amount * 0.9), currencyCode: EUR },
      deadline : none,
      description : "Pagamento efetuado por " ++ contract.Employer.partyId ++ " a " ++ contract.Employee.partyId
      };
     return MyResponse{ 
       paymentConfirmation: "O trimestre foi pago com um desconto",
       contractInfo: "O contrato foi renovado e termina a " ++ format(addPeriod(contract.contractDate, contract.duration), "DD/MM/YYYY"),
       contractEnd: format(addPeriod(contract.contractDate, contract.duration), "DD/MM/YYYY")
     }

    else 
     return MyResponse{ 
       paymentConfirmation: "O trimestre não foi pago por má avaliação",
       contractInfo: "O contrato não foi renovado.",
       contractEnd: ""
       }
  }
}